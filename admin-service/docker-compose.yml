version: '3.8'

services:
  admin-service:
    build: .
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=development
      - PORT=3010
      - DATABASE_URL=postgresql://admin_user:admin_password@postgres:5432/admin_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_ADMIN_SECRET=your-super-secret-admin-jwt-key-change-in-production
      - ADMIN_TOKEN_SECRET=your-super-secret-admin-token-change-in-production
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - TRIP_SERVICE_URL=http://trip-service:3003
      - DELIVERY_SERVICE_URL=http://delivery-service:3004
      - PAYMENT_SERVICE_URL=http://payment-service:3007
      - LOCATION_SERVICE_URL=http://location-service:3008
      - NOTIFICATION_SERVICE_URL=http://notification-service:3009
      - CORS_ORIGIN=http://localhost:3000,http://localhost:3001
      - ENABLE_REAL_TIME_DASHBOARD=true
      - ENABLE_AUTO_BACKUP=true
      - ENABLE_ADVANCED_ANALYTICS=true
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./backups:/app/backups
      - ./exports:/app/exports
    restart: unless-stopped
    networks:
      - admin-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=admin_db
      - POSTGRES_USER=admin_user
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --lc-collate=C --lc-ctype=C
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - admin-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin_user -d admin_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - admin-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional: Admin dashboard frontend (if you want to include it)
  admin-dashboard:
    image: nginx:alpine
    ports:
      - "3011:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - admin-service
    restart: unless-stopped
    networks:
      - admin-network
    profiles:
      - frontend

  # Optional: Database administration tool
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@p2pdelivery.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - admin-network
    profiles:
      - tools

  # Optional: Redis administration tool
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - admin-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  admin-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
version: '3.8'

services:
  delivery-request-service:
    build: .
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=delivery_db
      - DB_USER=delivery_user
      - DB_PASSWORD=delivery_password
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-here
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - TRIP_SERVICE_URL=http://trip-service:3003
      - PAYMENT_SERVICE_URL=http://payment-service:3007
      - NOTIFICATION_SERVICE_URL=http://notification-service:3009
      - LOCATION_SERVICE_URL=http://location-service:3008
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - p2p-delivery-network
    restart: unless-stopped

  postgres:
    image: postgis/postgis:15-3.3-alpine
    environment:
      - POSTGRES_DB=delivery_db
      - POSTGRES_USER=delivery_user
      - POSTGRES_PASSWORD=delivery_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U delivery_user -d delivery_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - p2p-delivery-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - p2p-delivery-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  p2p-delivery-network:
    driver: bridge